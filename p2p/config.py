from detectron2.config import CfgNode as CN


def add_p2p_config(cfg):

    """
    Add config for P2PNet
    """

    _C = cfg

    _C.MODEL.BACKBONE.ARCH = 'vgg16_bn'
    _C.MODEL.BACKBONE.PRETRAINED = True

    _C.MODEL.P2PNET = CN()
    _C.MODEL.P2PNET.THRESHOLD = 0.5
    _C.MODEL.P2PNET.NUM_CLASSES = 2
    _C.MODEL.P2PNET.ROWS = 2
    _C.MODEL.P2PNET.LINES = 2
    _C.MODEL.P2PNET.ANCHOR_PYRAMID_LEVELS = [3]
    _C.MODEL.P2PNET.DECODER_FEATURE_SIZE = 256
    _C.MODEL.P2PNET.FEATURE_SIZES = [256, 512, 512]
    _C.MODEL.P2PNET.BACKBONE_FEATURES_TO_DECODER = [1, 2, 3]
    _C.MODEL.P2PNET.DECODER_FEATURE_TO_BRANCHES = 1

    _C.MODEL.P2PNET.COST_CLASS = 1
    _C.MODEL.P2PNET.COST_POINT = 0.05
    _C.MODEL.P2PNET.CLASS_LOSS_WEIGHT = 1.0
    _C.MODEL.P2PNET.POINT_LOSS_WEIGHT = 0.0002
    _C.MODEL.P2PNET.EMPTY_CLASS_LOSS_WEIGHT = 0.5

    _C.INPUT.P2PNET = CN()
    _C.INPUT.P2PNET.SCALE_RANGE = [0.7, 1.3]
    _C.INPUT.P2PNET.PATCH_SIZE = 128
    _C.INPUT.P2PNET.FLIP = 0.5

    _C.SOLVER.BASE_LR_BACKBONE = 1e-05
    
    _C.SOLVER.SCHEDULER = CN()
    _C.SOLVER.SCHEDULER.step_size = 3500
    _C.SOLVER.SCHEDULER.gamma=0.1

